import numpy as np
import matplotlib.pyplot as plt
print("Jay Parab")
def create_distance_function(a, b, c):
    def distance(x, y):
        nom = a * x + b * y + c
        if nom == 0:
            pos = 0
        elif (nom < 0 and b < 0) or (nom > 0 and b > 0):
            pos = -1
        else:
            pos = 1
        return (np.absolute(nom) / np.sqrt( a ** 2 + b **2), pos)
    return distance

orange = (4.5, 1.8)
lemon = (1.1, 3.9)
fruits_coords = [orange, lemon]
fig, ax = plt.subplots()
ax.set_xlabel("sweetness")
ax.set_ylabel("sourness")
x_min, x_max = -1, 7
y_min, y_max = -1, 8
ax.set_xlim([x_min, x_max])
ax.set_ylim([y_min, y_max])
X = np.arange(x_min, x_max, 0.1)

step = 0.05
for x in np.arange(0, 1+step, step):
    slope = np.tan(np.arccos(x))
    dist4linel = create_distance_function(slope, -1, 0)
    Y = slope * X
    results = []
    for point in fruits_coords:
        results.append(dist4linel(*point))
    if (results[0][1] != results[1][1]):
        ax.plot(X, Y, "g-", linewidth = 0.8, alpha = 0.9)
    else:
        ax.plot(X, Y, "r-", linewidth = 0.8, alpha = 0.9)


size = 10
for(index, (x,y)) in enumerate(fruits_coords):
    if index == 0:
        ax.plot(x, y, "o", color = "darkorange", markersize = size)
    else:
        ax.plot(x, y, "oy", markersize = size)

plt.show()
